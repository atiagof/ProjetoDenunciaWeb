@model bool?

@using WebDenunciaSSP.CommonLibs.Helper
@{
    EditorTemplateConfiguration config = new EditorTemplateConfiguration(ViewData);

    string modelName = config.ModelName;
    string fieldName = config.FieldName;
    string fieldId = config.FieldId;

    //Default name for forms
    string FormEntityModel = config.Form;
    string TemplateName = modelName + fieldName + ".html";
}
<div class="form-group @ViewData["cssclass"] @(!ViewData.ModelMetadata.IsRequired ? "" : " has-feedback ")" ng-class="{ @(!ViewData.ModelMetadata.IsRequired ? "" : string.Format("'has-error': {0}.$invalid && {0}.$touched, 'has-success': {0}.$valid && @FormEntityModel.$touched", FormEntityModel)) }">
    <div class="checkbox">
        <label for="@fieldId">
            <input id="@fieldId"
                   name="@fieldName"
                   ng-model="@fieldId"
                   ng-init="@fieldId=@(ViewData.Model.HasValue && ViewData.Model.Value? "true" : "false")"
                   type="checkbox"
                   value="@(ViewData.Model.HasValue && ViewData.Model.Value? "true" : "false")" />
            @ViewData.ModelMetadata.DisplayName
            @if (config.HasValidation)
            {
                <span class="glyphicon glyphicon-ok form-control-feedback" aria-hidden="true" ng-show="!@(config.Pending) && @(config.Valid) && @(config.Touched)"></span>
                <span class="glyphicon glyphicon-info-sign form-control-feedback" aria-hidden="true" ng-show="!@(config.Pending) && @(config.Invalid) && @(config.Touched)"></span>
                <span class="glyphicon glyphicon-refresh form-control-feedback" aria-hidden="true" ng-show="@(config.Pending) && @(config.Touched)"></span>
            }
            </label>
    </div>
    @if (config.HasValidation)
    {
        <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 popoverMessageValidator" ng-show="@(config.Touched) && @(config.Invalid) && (isMobile || @(config.Focus))">
            <div ng-class="{'popover bottom': !isMobile }" class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
                <div class="arrow"></div>
                @*ToDo: Implementar diversos tipos de validação.*@
                <div ng-class="{'popover-content': !isMobile }">
                    <div ng-messages="@(config.Error)" style="color:maroon" role="alert">
                        <div class="alert alert-danger" role="alert" ng-message="required"><i class="glyphicon glyphicon-info-sign"></i> Campo Obrigatório</div>
                        <div class="alert alert-danger" role="alert" ng-message="required"><i class="glyphicon glyphicon-info-sign"></i> Campo Obrigatório</div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>