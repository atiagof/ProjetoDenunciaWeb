
@{
    string modelName = ViewData.ModelMetadata.ContainerType.Name;
    string fieldName = ViewData.TemplateInfo.GetFullHtmlFieldId(string.Empty);
    string fieldId = modelName + (string.IsNullOrEmpty(modelName) ? "" : ".") + fieldName;

    //Default name for forms
    string FormEntityModel = modelName + "Form." + fieldName;
    string TemplateName = modelName + fieldName + ".html";
}

<div class="form-group @ViewData["cssclass"] has-feedback" ng-class="{ 'has-error': @FormEntityModel.$invalid && @FormEntityModel.$touched, 'has-success': @FormEntityModel.$valid && @FormEntityModel.$touched }">
    <label for="@fieldId">@ViewData.ModelMetadata.DisplayName</label>
    <div class="input-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <input class="form-control"
               ng-class="{ 'has-error': @FormEntityModel.$invalid && @FormEntityModel.$touched, 'has-success': @FormEntityModel.$valid && @FormEntityModel.$touched  }"
               id="@fieldId"
               name="@fieldName"
               ng-model="@fieldId"
               ng-init="@fieldId=@("'" + ViewData.Model + "'")"
               type="text"
               value="@ViewData.Model"
               @(ViewData.ModelMetadata.IsRequired ? "required" : "")
               ng-focus="@FormEntityModel.$Focus = true"
               ng-blur="@FormEntityModel.$Focus = false" />        
    </div>
</div>
