@model string

@{
    string modelName = ViewData["modelname"].ToString();
    string fieldName = ViewData.TemplateInfo.HtmlFieldPrefix.Replace(".", "_");
    string fieldId = modelName + (string.IsNullOrEmpty(modelName) ? "" : ".") + fieldName;

    //Default name for forms
    string FormEntityModel = modelName + "Form." + fieldName;
    string TemplateName = modelName + fieldName + ".html";
    bool hasValidation = ViewData.ModelMetadata.IsRequired;
}
<div class="form-group @ViewData["cssclass"] @(!ViewData.ModelMetadata.IsRequired ? "" : "has-feedback")" ng-class="{ 'has-error': @FormEntityModel.$invalid && @FormEntityModel.$touched, 'has-success': @FormEntityModel.$valid && @FormEntityModel.$touched }">
    <label for="@fieldId">@ViewData.ModelMetadata.DisplayName</label>
    <div class="input-group col-xs-12 col-sm-12 col-md-12 col-lg-12">
        <input class="form-control"
               ng-class="{ 'has-error': @FormEntityModel.$invalid && @FormEntityModel.$touched, 'has-success': @FormEntityModel.$valid && @FormEntityModel.$touched  }"
               id="@fieldId"
               name="@fieldName"
               ng-model="@fieldId"
               ng-init="@fieldId=@("'" + ViewData.Model + "'")"
               type="text"
               maxlength="12"
               value="@ViewData.Model"
               @(ViewData.ModelMetadata.IsRequired ? "required" : "")
               ng-focus="@FormEntityModel.$Focus = true"
               ng-blur="@FormEntityModel.$Focus = false" />
        <span class="glyphicon glyphicon-ok form-control-feedback" aria-hidden="true" ng-show="!@FormEntityModel.$pending && @FormEntityModel.$valid && @FormEntityModel.$touched"></span>
        <span class="glyphicon glyphicon-info-sign form-control-feedback" aria-hidden="true" ng-show="!@FormEntityModel.$pending && @FormEntityModel.$invalid && @FormEntityModel.$touched"></span>
        <span class="glyphicon glyphicon-refresh form-control-feedback" aria-hidden="true" ng-show="@FormEntityModel.$pending && @FormEntityModel.$touched"></span>
    </div>
    <div class="col-xs-12 col-sm-12 col-md-12 col-lg-12 popoverMessageValidator" ng-show="@FormEntityModel.$touched  && (isMobile || @FormEntityModel.$Focus) && @FormEntityModel.$invalid">
        <div ng-class="{'popover bottom': !isMobile }" class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="arrow"></div>
            @*ToDo: Implementar diversos tipos de validação.*@
            <div ng-class="{'popover-content': !isMobile }">
                <div ng-messages="@FormEntityModel.$error" style="color:maroon" role="alert">
                    <div class="alert alert-danger" role="alert" ng-message="required"><i class="glyphicon glyphicon-info-sign"></i> Campo Obrigatório</div>
                    @*<div class="alert alert-danger" role="alert" ng-message="RGValid"><i class="glyphicon glyphicon-info-sign"></i> RG Inválido</div>*@
                </div>
            </div>
        </div>
    </div>
</div>